#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PreTestDanielRenato")]
public partial class DataClassesDatabasesPreTestDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertTable_Company(Table_Company instance);
  partial void UpdateTable_Company(Table_Company instance);
  partial void DeleteTable_Company(Table_Company instance);
  partial void InsertTable_Document(Table_Document instance);
  partial void UpdateTable_Document(Table_Document instance);
  partial void DeleteTable_Document(Table_Document instance);
  partial void InsertTable_Document_Category(Table_Document_Category instance);
  partial void UpdateTable_Document_Category(Table_Document_Category instance);
  partial void DeleteTable_Document_Category(Table_Document_Category instance);
  partial void InsertTable_Position(Table_Position instance);
  partial void UpdateTable_Position(Table_Position instance);
  partial void DeleteTable_Position(Table_Position instance);
  partial void InsertTable_User(Table_User instance);
  partial void UpdateTable_User(Table_User instance);
  partial void DeleteTable_User(Table_User instance);
  #endregion
	
	public DataClassesDatabasesPreTestDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PreTestDanielRenatoConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDatabasesPreTestDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDatabasesPreTestDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDatabasesPreTestDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Table_Company> Table_Companies
	{
		get
		{
			return this.GetTable<Table_Company>();
		}
	}
	
	public System.Data.Linq.Table<Table_Document> Table_Documents
	{
		get
		{
			return this.GetTable<Table_Document>();
		}
	}
	
	public System.Data.Linq.Table<Table_Document_Category> Table_Document_Categories
	{
		get
		{
			return this.GetTable<Table_Document_Category>();
		}
	}
	
	public System.Data.Linq.Table<Table_Position> Table_Positions
	{
		get
		{
			return this.GetTable<Table_Position>();
		}
	}
	
	public System.Data.Linq.Table<Table_User> Table_Users
	{
		get
		{
			return this.GetTable<Table_User>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_Company")]
public partial class Table_Company : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<System.Guid> _UID;
	
	private string _Name;
	
	private string _Address;
	
	private string _Email;
	
	private string _Telephone;
	
	private System.Nullable<int> _Flag;
	
	private System.Nullable<int> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedAt;
	
	private EntitySet<Table_Document> _Table_Documents;
	
	private EntitySet<Table_User> _Table_Users;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUIDChanging(System.Nullable<System.Guid> value);
    partial void OnUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFlagChanging(System.Nullable<int> value);
    partial void OnFlagChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
	
	public Table_Company()
	{
		this._Table_Documents = new EntitySet<Table_Document>(new Action<Table_Document>(this.attach_Table_Documents), new Action<Table_Document>(this.detach_Table_Documents));
		this._Table_Users = new EntitySet<Table_User>(new Action<Table_User>(this.attach_Table_Users), new Action<Table_User>(this.detach_Table_Users));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UID
	{
		get
		{
			return this._UID;
		}
		set
		{
			if ((this._UID != value))
			{
				this.OnUIDChanging(value);
				this.SendPropertyChanging();
				this._UID = value;
				this.SendPropertyChanged("UID");
				this.OnUIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(225)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(225)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(14)")]
	public string Telephone
	{
		get
		{
			return this._Telephone;
		}
		set
		{
			if ((this._Telephone != value))
			{
				this.OnTelephoneChanging(value);
				this.SendPropertyChanging();
				this._Telephone = value;
				this.SendPropertyChanged("Telephone");
				this.OnTelephoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="Int")]
	public System.Nullable<int> Flag
	{
		get
		{
			return this._Flag;
		}
		set
		{
			if ((this._Flag != value))
			{
				this.OnFlagChanging(value);
				this.SendPropertyChanging();
				this._Flag = value;
				this.SendPropertyChanged("Flag");
				this.OnFlagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedAt
	{
		get
		{
			return this._CreatedAt;
		}
		set
		{
			if ((this._CreatedAt != value))
			{
				this.OnCreatedAtChanging(value);
				this.SendPropertyChanging();
				this._CreatedAt = value;
				this.SendPropertyChanged("CreatedAt");
				this.OnCreatedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Company_Table_Document", Storage="_Table_Documents", ThisKey="ID", OtherKey="IDCompany")]
	public EntitySet<Table_Document> Table_Documents
	{
		get
		{
			return this._Table_Documents;
		}
		set
		{
			this._Table_Documents.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Company_Table_User", Storage="_Table_Users", ThisKey="ID", OtherKey="IDCompany")]
	public EntitySet<Table_User> Table_Users
	{
		get
		{
			return this._Table_Users;
		}
		set
		{
			this._Table_Users.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Table_Documents(Table_Document entity)
	{
		this.SendPropertyChanging();
		entity.Table_Company = this;
	}
	
	private void detach_Table_Documents(Table_Document entity)
	{
		this.SendPropertyChanging();
		entity.Table_Company = null;
	}
	
	private void attach_Table_Users(Table_User entity)
	{
		this.SendPropertyChanging();
		entity.Table_Company = this;
	}
	
	private void detach_Table_Users(Table_User entity)
	{
		this.SendPropertyChanging();
		entity.Table_Company = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_Document")]
public partial class Table_Document : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<System.Guid> _UID;
	
	private System.Nullable<int> _IDCompany;
	
	private System.Nullable<int> _IDCategory;
	
	private string _Name;
	
	private string _Description;
	
	private System.Nullable<int> _Flag;
	
	private System.Nullable<int> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedAt;
	
	private EntityRef<Table_Company> _Table_Company;
	
	private EntityRef<Table_Document_Category> _Table_Document_Category;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUIDChanging(System.Nullable<System.Guid> value);
    partial void OnUIDChanged();
    partial void OnIDCompanyChanging(System.Nullable<int> value);
    partial void OnIDCompanyChanged();
    partial void OnIDCategoryChanging(System.Nullable<int> value);
    partial void OnIDCategoryChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFlagChanging(System.Nullable<int> value);
    partial void OnFlagChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
	
	public Table_Document()
	{
		this._Table_Company = default(EntityRef<Table_Company>);
		this._Table_Document_Category = default(EntityRef<Table_Document_Category>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UID
	{
		get
		{
			return this._UID;
		}
		set
		{
			if ((this._UID != value))
			{
				this.OnUIDChanging(value);
				this.SendPropertyChanging();
				this._UID = value;
				this.SendPropertyChanged("UID");
				this.OnUIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="Int")]
	public System.Nullable<int> IDCompany
	{
		get
		{
			return this._IDCompany;
		}
		set
		{
			if ((this._IDCompany != value))
			{
				if (this._Table_Company.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCompanyChanging(value);
				this.SendPropertyChanging();
				this._IDCompany = value;
				this.SendPropertyChanged("IDCompany");
				this.OnIDCompanyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategory", DbType="Int")]
	public System.Nullable<int> IDCategory
	{
		get
		{
			return this._IDCategory;
		}
		set
		{
			if ((this._IDCategory != value))
			{
				if (this._Table_Document_Category.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCategoryChanging(value);
				this.SendPropertyChanging();
				this._IDCategory = value;
				this.SendPropertyChanged("IDCategory");
				this.OnIDCategoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(225)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="Int")]
	public System.Nullable<int> Flag
	{
		get
		{
			return this._Flag;
		}
		set
		{
			if ((this._Flag != value))
			{
				this.OnFlagChanging(value);
				this.SendPropertyChanging();
				this._Flag = value;
				this.SendPropertyChanged("Flag");
				this.OnFlagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedAt
	{
		get
		{
			return this._CreatedAt;
		}
		set
		{
			if ((this._CreatedAt != value))
			{
				this.OnCreatedAtChanging(value);
				this.SendPropertyChanging();
				this._CreatedAt = value;
				this.SendPropertyChanged("CreatedAt");
				this.OnCreatedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Company_Table_Document", Storage="_Table_Company", ThisKey="IDCompany", OtherKey="ID", IsForeignKey=true)]
	public Table_Company Table_Company
	{
		get
		{
			return this._Table_Company.Entity;
		}
		set
		{
			Table_Company previousValue = this._Table_Company.Entity;
			if (((previousValue != value) 
						|| (this._Table_Company.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Table_Company.Entity = null;
					previousValue.Table_Documents.Remove(this);
				}
				this._Table_Company.Entity = value;
				if ((value != null))
				{
					value.Table_Documents.Add(this);
					this._IDCompany = value.ID;
				}
				else
				{
					this._IDCompany = default(Nullable<int>);
				}
				this.SendPropertyChanged("Table_Company");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Document_Category_Table_Document", Storage="_Table_Document_Category", ThisKey="IDCategory", OtherKey="ID", IsForeignKey=true)]
	public Table_Document_Category Table_Document_Category
	{
		get
		{
			return this._Table_Document_Category.Entity;
		}
		set
		{
			Table_Document_Category previousValue = this._Table_Document_Category.Entity;
			if (((previousValue != value) 
						|| (this._Table_Document_Category.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Table_Document_Category.Entity = null;
					previousValue.Table_Documents.Remove(this);
				}
				this._Table_Document_Category.Entity = value;
				if ((value != null))
				{
					value.Table_Documents.Add(this);
					this._IDCategory = value.ID;
				}
				else
				{
					this._IDCategory = default(Nullable<int>);
				}
				this.SendPropertyChanged("Table_Document_Category");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_Document_Category")]
public partial class Table_Document_Category : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<System.Guid> _UID;
	
	private string _Name;
	
	private System.Nullable<int> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedAt;
	
	private EntitySet<Table_Document> _Table_Documents;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUIDChanging(System.Nullable<System.Guid> value);
    partial void OnUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
	
	public Table_Document_Category()
	{
		this._Table_Documents = new EntitySet<Table_Document>(new Action<Table_Document>(this.attach_Table_Documents), new Action<Table_Document>(this.detach_Table_Documents));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UID
	{
		get
		{
			return this._UID;
		}
		set
		{
			if ((this._UID != value))
			{
				this.OnUIDChanging(value);
				this.SendPropertyChanging();
				this._UID = value;
				this.SendPropertyChanged("UID");
				this.OnUIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(225)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedAt
	{
		get
		{
			return this._CreatedAt;
		}
		set
		{
			if ((this._CreatedAt != value))
			{
				this.OnCreatedAtChanging(value);
				this.SendPropertyChanging();
				this._CreatedAt = value;
				this.SendPropertyChanged("CreatedAt");
				this.OnCreatedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Document_Category_Table_Document", Storage="_Table_Documents", ThisKey="ID", OtherKey="IDCategory")]
	public EntitySet<Table_Document> Table_Documents
	{
		get
		{
			return this._Table_Documents;
		}
		set
		{
			this._Table_Documents.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Table_Documents(Table_Document entity)
	{
		this.SendPropertyChanging();
		entity.Table_Document_Category = this;
	}
	
	private void detach_Table_Documents(Table_Document entity)
	{
		this.SendPropertyChanging();
		entity.Table_Document_Category = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_Position")]
public partial class Table_Position : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<System.Guid> _UID;
	
	private string _Name;
	
	private System.Nullable<int> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedAt;
	
	private EntitySet<Table_User> _Table_Users;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUIDChanging(System.Nullable<System.Guid> value);
    partial void OnUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
	
	public Table_Position()
	{
		this._Table_Users = new EntitySet<Table_User>(new Action<Table_User>(this.attach_Table_Users), new Action<Table_User>(this.detach_Table_Users));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UID
	{
		get
		{
			return this._UID;
		}
		set
		{
			if ((this._UID != value))
			{
				this.OnUIDChanging(value);
				this.SendPropertyChanging();
				this._UID = value;
				this.SendPropertyChanged("UID");
				this.OnUIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(225)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedAt
	{
		get
		{
			return this._CreatedAt;
		}
		set
		{
			if ((this._CreatedAt != value))
			{
				this.OnCreatedAtChanging(value);
				this.SendPropertyChanging();
				this._CreatedAt = value;
				this.SendPropertyChanged("CreatedAt");
				this.OnCreatedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Position_Table_User", Storage="_Table_Users", ThisKey="ID", OtherKey="IDPosition")]
	public EntitySet<Table_User> Table_Users
	{
		get
		{
			return this._Table_Users;
		}
		set
		{
			this._Table_Users.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Table_Users(Table_User entity)
	{
		this.SendPropertyChanging();
		entity.Table_Position = this;
	}
	
	private void detach_Table_Users(Table_User entity)
	{
		this.SendPropertyChanging();
		entity.Table_Position = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_User")]
public partial class Table_User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<System.Guid> _UID;
	
	private System.Nullable<int> _IDCompany;
	
	private System.Nullable<int> _IDPosition;
	
	private string _Name;
	
	private string _Address;
	
	private string _Email;
	
	private string _Telephone;
	
	private string _Username;
	
	private string _Password;
	
	private string _Role;
	
	private System.Nullable<int> _Flag;
	
	private System.Nullable<int> _CreatedBy;
	
	private System.Nullable<System.DateTime> _CreatedAt;
	
	private EntityRef<Table_Company> _Table_Company;
	
	private EntityRef<Table_Position> _Table_Position;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUIDChanging(System.Nullable<System.Guid> value);
    partial void OnUIDChanged();
    partial void OnIDCompanyChanging(System.Nullable<int> value);
    partial void OnIDCompanyChanged();
    partial void OnIDPositionChanging(System.Nullable<int> value);
    partial void OnIDPositionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnFlagChanging(System.Nullable<int> value);
    partial void OnFlagChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
	
	public Table_User()
	{
		this._Table_Company = default(EntityRef<Table_Company>);
		this._Table_Position = default(EntityRef<Table_Position>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UID
	{
		get
		{
			return this._UID;
		}
		set
		{
			if ((this._UID != value))
			{
				this.OnUIDChanging(value);
				this.SendPropertyChanging();
				this._UID = value;
				this.SendPropertyChanged("UID");
				this.OnUIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="Int")]
	public System.Nullable<int> IDCompany
	{
		get
		{
			return this._IDCompany;
		}
		set
		{
			if ((this._IDCompany != value))
			{
				if (this._Table_Company.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCompanyChanging(value);
				this.SendPropertyChanging();
				this._IDCompany = value;
				this.SendPropertyChanged("IDCompany");
				this.OnIDCompanyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPosition", DbType="Int")]
	public System.Nullable<int> IDPosition
	{
		get
		{
			return this._IDPosition;
		}
		set
		{
			if ((this._IDPosition != value))
			{
				if (this._Table_Position.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDPositionChanging(value);
				this.SendPropertyChanging();
				this._IDPosition = value;
				this.SendPropertyChanged("IDPosition");
				this.OnIDPositionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(225)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(14)")]
	public string Telephone
	{
		get
		{
			return this._Telephone;
		}
		set
		{
			if ((this._Telephone != value))
			{
				this.OnTelephoneChanging(value);
				this.SendPropertyChanging();
				this._Telephone = value;
				this.SendPropertyChanged("Telephone");
				this.OnTelephoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(225)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="VarChar(50)")]
	public string Role
	{
		get
		{
			return this._Role;
		}
		set
		{
			if ((this._Role != value))
			{
				this.OnRoleChanging(value);
				this.SendPropertyChanging();
				this._Role = value;
				this.SendPropertyChanged("Role");
				this.OnRoleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="Int")]
	public System.Nullable<int> Flag
	{
		get
		{
			return this._Flag;
		}
		set
		{
			if ((this._Flag != value))
			{
				this.OnFlagChanging(value);
				this.SendPropertyChanging();
				this._Flag = value;
				this.SendPropertyChanged("Flag");
				this.OnFlagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
	public System.Nullable<int> CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedAt
	{
		get
		{
			return this._CreatedAt;
		}
		set
		{
			if ((this._CreatedAt != value))
			{
				this.OnCreatedAtChanging(value);
				this.SendPropertyChanging();
				this._CreatedAt = value;
				this.SendPropertyChanged("CreatedAt");
				this.OnCreatedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Company_Table_User", Storage="_Table_Company", ThisKey="IDCompany", OtherKey="ID", IsForeignKey=true)]
	public Table_Company Table_Company
	{
		get
		{
			return this._Table_Company.Entity;
		}
		set
		{
			Table_Company previousValue = this._Table_Company.Entity;
			if (((previousValue != value) 
						|| (this._Table_Company.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Table_Company.Entity = null;
					previousValue.Table_Users.Remove(this);
				}
				this._Table_Company.Entity = value;
				if ((value != null))
				{
					value.Table_Users.Add(this);
					this._IDCompany = value.ID;
				}
				else
				{
					this._IDCompany = default(Nullable<int>);
				}
				this.SendPropertyChanged("Table_Company");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_Position_Table_User", Storage="_Table_Position", ThisKey="IDPosition", OtherKey="ID", IsForeignKey=true)]
	public Table_Position Table_Position
	{
		get
		{
			return this._Table_Position.Entity;
		}
		set
		{
			Table_Position previousValue = this._Table_Position.Entity;
			if (((previousValue != value) 
						|| (this._Table_Position.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Table_Position.Entity = null;
					previousValue.Table_Users.Remove(this);
				}
				this._Table_Position.Entity = value;
				if ((value != null))
				{
					value.Table_Users.Add(this);
					this._IDPosition = value.ID;
				}
				else
				{
					this._IDPosition = default(Nullable<int>);
				}
				this.SendPropertyChanged("Table_Position");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
